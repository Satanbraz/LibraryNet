@model IEnumerable<DTO.Edit>

<style>
    .modal-vertical-centered .modal-dialog {
        display: flex;
        align-items: center;
        min-height: calc(100% - 1rem); /* Altura mínima del modal */
    }

    /* Estilos para los mensajes de error */
    .mensaje-error {
        color: red;
        font-size: 12px;
        margin-top: 5px; /* Espacio entre el campo y el mensaje de error */
    }

</style>

<div id="modalAddEdit" class="modal fade modal-vertical-centered" tabindex="-1" aria-labelledby="modalAddEditLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalAddEditLabel">Agregar Editorial</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Formulario de agregar Editorial -->
                <form id="formaddEdit">
                    <div class="mb-3">
                        <label for="editName" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="editName" name="editName" required>
                    </div>
                    <!-- Agrega más campos según tus necesidades -->
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="validarForm()">Agregar</button>
            </div>
        </div>
    </div>
</div>

<div id="modalEditEdit" class="modal fade modal-vertical-centered" tabindex="-1" aria-labelledby="modalEditEditLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalEditEditLabel">Actualizar Género</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Formulario de actualizar Editorial -->
                <form id="formEditGender">
                    <div class="mb-3">
                        <label for="editNameEdit" class="form-label">Nombre</label>
                        <input type="hidden" id="idEdit" />
                        <input type="text" class="form-control" id="editNameEdit" name="editNameEdit" required>
                    </div>
                    <!-- Agrega más campos según tus necesidades -->
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="validarFormEdit()">Guardar</button>
            </div>
        </div>
    </div>
</div>

<ol class="breadcrumb mb-4 mt-4">
    <li class="breadcrumb-item"><a href="#">Admin</a></li>
    <li class="breadcrumb-item active">Editoriales</li>
</ol>

<div class="card mb-4">

    <div class="card-header">
        <i class="fas fa-table me-1"></i>Listado de Editoriales
    </div>

    <div class="card-body">
        <div class="row">
            <div class="text-end">
                <button onclick="addEdit()" class="btn btn-primary">Agregar Editorial</button>
            </div>
        </div>

        <div class="panel">
            <div class="panel-body">
                <div class="table-primary">
                    <table border="0" class="table table-responsive">
                        <thead>
                            <tr role="row">
                                <th>Id</th>
                                <th>Editorial</th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var edit in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => edit.Id)</td>
                                    <td>@Html.DisplayFor(modelItem => edit.EditName)</td>
                                    <!--Se insertan botones de accion-->
                                    <td>
                                        <div class="form-actions no-color text-end">
                                            <button type="button" class="btn btn-secondary" onclick="editEdit('@edit.Id')" data-toggle="modal" data-target="#exampleModal" data-whatever="">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                                    <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
                                                </svg>
                                            </button>
                                            <button type="button" class="btn btn-secondary" onclick="delEdit('@edit.Id')" value="Eliminar">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">
                                                    <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z" />
                                                </svg>
                                            </button>
                                        </div>
                                    </td><!--Fin botones-->
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>



<script type="text/javascript">
    $(document).ready(function () {
        //Cambia el título de la página
        document.title = document.title.substring(0, document.title.lastIndexOf('-') + 1) + ' Editoriales';

        $('#modalAddEdit').modal('hide');
    });

    // Mostrar el formulario de Crear
    function addEdit() {
        // Mostrar la ventana emergente para agregar libros
        $('#modalAddEdit').modal('show');
    }

    // Mostrar el formulario de Crear
    function editEdit(id) {
        // Mostrar la ventana emergente para agregar libros
        $('#modalEditEdit').modal('show');

        $.ajax({
            url: '/Edit/Details',
            type: 'GET',
            data: { id: id },
            success: function (data) {

                console.log(data.EditName);
                // var dT = JSON.parse(data);

                $('#idEdit').val(data.Id);
                $('#editNameEdit').val(data.EditName);
            },
            error: function () {
                alert("Error al cargar registro");
            }
        });


    }

    // Validar formulario crear
    function validarForm() {

        var isValid = true;

        //Validacion campo editName
        document.getElementById('editName').addEventListener('blur', function () {
            if (document.getElementById('editName').value == "") {
                mostrarMensajeError(editName, 'Ingrese Nombre. ');
                isValid = false;
            } else {
                ocultarMensajeError(editName);
            }
        });

        if (isValid) {
            var editModel = {
                EditName: editName.value
            }

            guardarEdit(editModel);
        }
    }

    // Validar formulario editar
    function validarFormEdit() {

        var isValid = true;

        //Validacion campo editName
        document.getElementById('editNameEdit').addEventListener('blur', function () {
            if (document.getElementById('editNameEdit').value == "") {
                mostrarMensajeError(editNameEdit, 'Ingrese Nombre. ');
                isValid = false;
            } else {
                ocultarMensajeError(editNameEdit);
            }
        });

        if (isValid) {
            var editModel = {
                Id: document.getElementById('idEdit').value,
                EditName: editNameEdit.value
            }

            updateEdit(editModel);
        }
    }

    // Enviar modelo al controller de crear
    function guardarEdit(modelo) {
        $.ajax({
            url: '/Edit/Create',
            type: 'POST',
            data: { edit: modelo },
            success: function (data) {
                if (data == "Ok") {
                    alert("Guardado con Exito");
                    location.reload();
                }
            },
            error: function () {
                alert("Error al registrar Datos");
            }
        });
    }

    // Enviar modelo al controller de editar
    function updateEdit(modelo) {
        $.ajax({
            url: '/Edit/Edit',
            type: 'POST',
            data: { edit: modelo },
            success: function (data) {
                if (data == "Ok") {
                    alert("Guardado con Exito");
                    location.reload();
                } else {
                    $('#modalEditEdit').modal('hide');
                    alert("Registro existente\nNo hay nada que actualizar");
                }
            },
            error: function () {
                $('#modalEditEdit').modal('hide');
                alert("Error al actualizar registro");
            }
        });
    }

    // Función para eliminar un registro con confirmación
    function delEdit(id) {
        // Mostrar un mensaje de confirmación antes de eliminar
        if (confirm("¿Estás seguro de que deseas eliminar este registro?")) {
            // Si el usuario confirma, realizar la eliminación
            $.ajax({
                url: '/Edit/Delete',
                type: 'POST',
                data: { editId: id },
                success: function (data) {
                    if (data == "Ok") {
                        alert("Registro eliminado con éxito");
                        location.reload(); // Actualizar la página después de eliminar
                    }
                },
                error: function () {
                    alert("Error al eliminar el registro");
                }
            });
        }
    }


    //Funcion para mostrar los mensajes de error
    function mostrarMensajeError(elemento, mensaje) {
        var mensajeError = elemento.nextElementSibling;
        if (!mensajeError || !mensajeError.classList.contains('mensaje-error')) {
            mensajeError = document.createElement('div');
            mensajeError.classList.add('mensaje-error');
            elemento.parentNode.insertBefore(mensajeError, elemento.nextSibling);
        }
        mensajeError.textContent = mensaje;
    }

    //Funcion para ocultar los mensajes de error
    function ocultarMensajeError(elemento) {
        var mensajeError = elemento.nextElementSibling;
        if (mensajeError && mensajeError.classList.contains('mensaje-error')) {
            mensajeError.parentNode.removeChild(mensajeError);
        }
    }
</script>
