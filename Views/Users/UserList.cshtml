@model IEnumerable<DTO.Users>

<style>
    .modal-vertical-centered .modal-dialog {
        display: flex;
        align-items: center;
        min-height: calc(100% - 1rem); /* Altura mínima del modal */
    }

    /* Estilos para los mensajes de error */
    .mensaje-error {
        color: red;
        font-size: 12px;
        margin-top: 5px; /* Espacio entre el campo y el mensaje de error */
    }
</style>

<div id="modalAddUser" class="modal fade modal-vertical-centered" tabindex="-1" aria-labelledby="modalAddUserLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalAddUserLabel">Agregar Usuario</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Formulario de agregar usuario -->
                <form id="formAddUser">
                    <div class="mb-3">
                        <label for="nameUser" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="nameUser" name="nameUser" required>
                    </div>
                    <div class="mb-3">
                        <label for="lNameUser" class="form-label">Apellido</label>
                        <input type="text" class="form-control" id="lNameUser" name="lNameUser" required>
                    </div>
                    <div class="mb-3">
                        <label for="emailUser" class="form-label">Correo</label>
                        <input type="email" class="form-control" id="emailUser" name="emailUser" required>
                    </div>
                    <div class="mb-3">
                        <label for="phoneUser" class="form-label">Teléfono</label>
                        <input type="text" class="form-control" id="phoneUser" name="phoneUser" placeholder="+569********" required>
                    </div>
                    <div class="mb-3">
                        <label for="addressUser" class="form-label">Dirección</label>
                        <input type="text" class="form-control" id="addressUser" name="addressUser" required>
                    </div>
                    <div class="mb-3">
                        <label class="control-label" for="rolUser">Tipo Usuario</label>
                        <select id="rolUser" name="rolUser" class="form-control">
                        </select>
                    </div>
                    <!-- Campos contraseña -->
                    <div class="mb-3">
                        <label for="passUser" class="form-label">Contraseña</label>
                        <input type="password" class="form-control" id="passUser" name="passUser" required>
                    </div>
                    <div class="mb-3">
                        <label for="pass2User" class="form-label">Reingrese contraseña</label>
                        <input type="password" class="form-control" id="pass2User" name="pass2User" required>
                    </div>
                    <!-- Agrega más campos según tus necesidades -->
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="validarForm()">Agregar</button>
            </div>
        </div>
    </div>
</div>

<div id="modalEditUser" class="modal fade modal-vertical-centered" tabindex="-1" aria-labelledby="modalEditUserLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalEditUserLabel">Actualizar Usuario</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Formulario de actualizar usuario -->
                <form id="formEditUser">
                    <input type="hidden" id="idUser" />
                    <div class="mb-3">
                        <label for="nameUserEdit" class="form-label">Nombre</label>
                        <input type="text" class="form-control" id="nameUserEdit" name="nameUserEdit" required>
                    </div>
                    <div class="mb-3">
                        <label for="lNameUserEdit" class="form-label">Apellido</label>
                        <input type="text" class="form-control" id="lNameUserEdit" name="lNameUserEdit" required>
                    </div>
                    <div class="mb-3">
                        <label for="emailUserEdit" class="form-label">Correo</label>
                        <input type="email" class="form-control" id="emailUserEdit" name="emailUserEdit" required>
                    </div>
                    <div class="mb-3">
                        <label for="phoneUserEdit" class="form-label">Teléfono</label>
                        <input type="text" class="form-control" id="phoneUserEdit" name="phoneUserEdit" placeholder="+569********" required>
                    </div>
                    <div class="mb-3">
                        <label for="addressUserEdit" class="form-label">Dirección</label>
                        <input type="text" class="form-control" id="addressUserEdit" name="addressUserEdit" required>
                    </div>
                    <div class="mb-3">
                        <label class="control-label" for="rolUserEdit">Tipo Usuario</label>
                        <select id="rolUserEdit" name="rolUserEdit" class="form-control">
                        </select>
                    </div>
                    <!-- Agrega más campos según tus necesidades -->
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" onclick="validarFormEdit()">Agregar</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="modalDelUser" tabindex="-1" role="dialog" aria-labelledby="edit" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                <h4 class="modal-title custom_align" id="Heading">Delete this entry</h4>
            </div>
            <div class="modal-body">

                <div class="alert alert-danger"><span class="glyphicon glyphicon-warning-sign"></span> Are you sure you want to delete this Record?</div>

            </div>
            <div class="modal-footer ">
                <button type="button" class="btn btn-success"><span class="glyphicon glyphicon-ok-sign"></span> Yes</button>
                <button type="button" class="btn btn-default" data-dismiss="modal"><span class="glyphicon glyphicon-remove"></span> No</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>


<ol class="breadcrumb mb-4 mt-4">
    <li class="breadcrumb-item"><a href="#">Admin</a></li>
    <li class="breadcrumb-item active">Usuarios</li>
</ol>

<div class="card">
    <div class="card-header">
        <i class="fas fa-table me-1"></i>Listado de Usuarios
    </div>

    <div class="card-body">
        <div class="row">
            <div class="text-end">
                <button onclick="addUser()" class="btn btn-primary">Agregar Usuario</button>
            </div>
        </div>
        <div class="panel">
            <div class="panel-body">
                <div class="table-primary">
                    <table border="0" class="table table-responsive">
                        <thead>
                            <tr role="row">
                                <th>Nombre</th>
                                <th>Apellido</th>
                                <th>Correo</th>
                                <th>Telefono</th>
                                <th>Direccion</th>
                                <th>Fecha Creacion</th>
                                <th>Tipo Usuario</th>
                                <th></th>

                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var users in Model)
                            {
                                <tr>
                                    <td>@Html.DisplayFor(modelItem => users.UserName)</td>
                                    <td>@Html.DisplayFor(modelItem => users.UserLastName)</td>
                                    <td>@Html.DisplayFor(modelItem => users.UserEmail)</td>
                                    <td>@Html.DisplayFor(modelItem => users.UserPhone)</td>
                                    <td>@Html.DisplayFor(modelItem => users.UserDir)</td>
                                    <td>@Html.DisplayFor(modelItem => users.UserDate)</td>
                                    <td>@Html.DisplayFor(modelItem => users.UserRolName)</td>
                                    <!--Se insertan botones de accion-->
                                    <td>
                                        <div class="form-actions no-color text-end">
                                            <button type="button" class="btn btn-secondary" onclick="editUser('@users.Id')" title="Editar" data-toggle="modal" data-target="#exampleModal" data-whatever="">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16">
                                                    <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z" />
                                                </svg>
                                            </button>
                                            <button type="button" class="btn btn-secondary" onclick="delUser('@users.Id')" title="Eliminar">
                                                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-trash-fill" viewBox="0 0 16 16">
                                                    <path d="M2.5 1a1 1 0 0 0-1 1v1a1 1 0 0 0 1 1H3v9a2 2 0 0 0 2 2h6a2 2 0 0 0 2-2V4h.5a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1H10a1 1 0 0 0-1-1H7a1 1 0 0 0-1 1H2.5zm3 4a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 .5-.5zM8 5a.5.5 0 0 1 .5.5v7a.5.5 0 0 1-1 0v-7A.5.5 0 0 1 8 5zm3 .5v7a.5.5 0 0 1-1 0v-7a.5.5 0 0 1 1 0z" />
                                                </svg>
                                            </button>
                                        </div>
                                    </td><!--Fin botones-->
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        //Cambia el título de la página
        document.title = document.title.substring(0, document.title.lastIndexOf('-') + 1) + ' Usuarios';

        $('#modalAddUser').modal('hide');
        $('#modalEditUser').modal('hide');

        $('#modalDelUser').modal('hide');

        // Cargar los géneros al cargar la página para crear registro
        $.ajax({
            type: 'GET',
            url: '@Url.Action("RolListJson", "Users")',
            dataType: 'json',
            success: function (data) {
                $("#rolUser").empty();

                // Agregar el mensaje de selección por defecto al select Organizaciones
                $("#rolUser").append('<option value="0">-- Todos --</option>');
                // Carga de datos a select
                data.forEach(function (item) {
                    var option = $("<option>").val(item.Id).text(item.RolName);
                    $("#rolUser").append(option);
                });;
            }
        });
    });

    // Mostrar el formulario de Crear
    function addUser() {
        // Mostrar la ventana emergente para agregar libros
        $('#modalAddUser').modal('show');
        validarForm();
    }
    // Mostrar el formulario de Editar
    function editUser(id) {
        // Mostrar la ventana emergente para agregar libros
        $('#modalEditUser').modal('show');

        $.ajax({
            url: '/Users/Details',
            type: 'GET',
            data: { Id: id },
            success: function (data) {

                // console.log(data);
                // var dT = JSON.parse(data);

                $('#idUser').val(data.Id);
                $('#nameUserEdit').val(data.UserName);
                $('#lNameUserEdit').val(data.UserLastName);
                $('#emailUserEdit').val(data.UserEmail);
                $('#addressUserEdit').val(data.UserDir);
                $('#phoneUserEdit').val(data.UserPhone);
                cargarUserRolList(data.UserRolId)
            },
            error: function () {
                alert("Error al cargar registro");
            }
        });
    }

    // Cargar los roles de usuario al cargar la página para editar registro
    function cargarUserRolList(idUserRol){
        $.ajax({
            type: 'GET',
            url: '@Url.Action("RolListJson", "Users")',
            dataType: 'json',
            success: function (data) {
                $("#rolUserEdit").empty();

                // Agregar el mensaje de selección por defecto al select Organizaciones
                $("#rolUserEdit").append('<option value="0">-- Todos --</option>');
                // Carga de datos a select
                data.forEach(function (item) {
                    if (item.Id == idUserRol) {
                        var option = $("<option selected>").val(item.Id).text(item.RolName);
                        $("#rolUserEdit").append(option);
                    } else {
                        var option = $("<option>").val(item.Id).text(item.RolName);
                        $("#rolUserEdit").append(option);
                    }
                });;
            }
        });
    }

    // Validar formulario
    function validarForm() {

        var isValid = true;

        //Validacion campo nameUser
        document.getElementById('nameUser').addEventListener('blur', function () {
            if (document.getElementById('nameUser').value == "") {
                mostrarMensajeError(nameUser, 'Ingrese Nombre. ');
                isValid = false;
            } else {
                ocultarMensajeError(nameUser);
            }
        });
        //Validacion campo lNameUser
        document.getElementById('lNameUser').addEventListener('blur', function () {
            if (document.getElementById('lNameUser').value == "") {
                mostrarMensajeError(lNameUser, 'Ingrese Apellido. ');
                isValid = false;
            } else {
                ocultarMensajeError(lNameUser);
            }
        });
        //Validacion campo emailUser
        document.getElementById('emailUser').addEventListener('blur', function () {
            if (document.getElementById('emailUser').value == "") {
                mostrarMensajeError(emailUser, 'Ingrese Correo. ');
                isValid = false;
            } else {
                ocultarMensajeError(emailUser);
            }
        });
        //Validacion campo phoneUser
        document.getElementById('phoneUser').addEventListener('blur', function () {
            if (document.getElementById('phoneUser').value == "") {
                mostrarMensajeError(phoneUser, 'Ingrese Teléfono. ');
                isValid = false;
            } else {
                ocultarMensajeError(phoneUser);
            }
        });
        //Validacion campo addressUser
        document.getElementById('addressUser').addEventListener('blur', function () {
            if (document.getElementById('addressUser').value == "") {
                mostrarMensajeError(addressUser, 'Ingrese direccón. ');
                isValid = false;
            } else {
                ocultarMensajeError(addressUser);
            }
        });
        //Validacion campo rolUser
        if (document.getElementById('rolUser').value <= 0) {
            mostrarMensajeError(rolUser, 'Seleccione Tipo de Usuario. ');
            isValid = false;
        } else {
            ocultarMensajeError(rolUser);
        }
        //Validacion campo passUser
        document.getElementById('passUser').addEventListener('blur', function () {
            if (document.getElementById('passUser').value == "") {
                mostrarMensajeError(passUser, 'Ingrese Contraseña. ');
                isValid = false;
            } else {
                ocultarMensajeError(passUser);
            }
        });

        //Validacion campo pass2User
        document.getElementById('pass2User').addEventListener('blur', function () {
            if (document.getElementById('pass2User').value == "") {
                mostrarMensajeError(pass2User, 'Reingrese contraseña. ');
                isValid = false;
            } else if (passUser.value != pass2User.value) {
                mostrarMensajeError(pass2User, 'Contraseñas no coinciden. ');
                isValid = false;
            } else {
                ocultarMensajeError(pass2User);
            }
        });

        if (isValid) {
            var userModel = {
                UserName: nameUser.value,
                UserLastName: lNameUser.value,
                UserEmail: emailUser.value,
                UserPassword: passUser.value,
                UserPhone: phoneUser.value,
                UserDir: addressUser.value,
                UserRolId: rolUser.value,
            }

            saveUser(userModel);
        }

    }

    // Validar formulario
    function validarFormEdit() {

        var isValid = true;

        //Validacion campo nameUserEdit
        document.getElementById('nameUserEdit').addEventListener('blur', function () {
            if (document.getElementById('nameUserEdit').value == "") {
                mostrarMensajeError(nameUserEdit, 'Ingrese Nombre. ');
                isValid = false;
            } else {
                ocultarMensajeError(nameUserEdit);
            }
        });
        //Validacion campo authorBook
        document.getElementById('lNameUserEdit').addEventListener('blur', function () {
            if (document.getElementById('lNameUserEdit').value == "") {
                mostrarMensajeError(lNameUserEdit, 'Ingrese Apellido. ');
                isValid = false;
            } else {
                ocultarMensajeError(lNameUserEdit);
            }
        });
        //Validacion campo emailUserEdit
        document.getElementById('emailUserEdit').addEventListener('blur', function () {
            if (document.getElementById('emailUserEdit').value <= 0) {
                mostrarMensajeError(emailUserEdit, 'Ingrese Correo. ');
                isValid = false;
            } else {
                ocultarMensajeError(emailUserEdit);
            }
        });
        //Validacion campo phoneUserEdit
        document.getElementById('phoneUserEdit').addEventListener('blur', function () {
            if (document.getElementById('phoneUserEdit').value <= 0) {
                mostrarMensajeError(phoneUserEdit, 'Ingrese Teléfono. ');
                isValid = false;
            } else {
                ocultarMensajeError(phoneUserEdit);
            }
        });
        //Validacion campo addressUserEdit
        document.getElementById('addressUserEdit').addEventListener('blur', function () {
            if (document.getElementById('addressUserEdit').value <= 0) {
                mostrarMensajeError(addressUserEdit, 'Ingrese direccón. ');
                isValid = false;
            } else {
                ocultarMensajeError(addressUserEdit);
            }
        });
        //Validacion campo rolUserEdit
        if (document.getElementById('rolUserEdit').value <= 0) {
            mostrarMensajeError(rolUserEdit, 'Seleccione Tipo de Usuario. ');
            isValid = false;
        } else {
            ocultarMensajeError(rolUserEdit);
        }
        if (isValid) {
            var userModel = {

                Id: document.getElementById('idUser').value,
                UserName: nameUserEdit.value,
                UserLastName: lNameUserEdit.value,
                UserEmail: emailUserEdit.value,
                UserPhone: phoneUserEdit.value,
                UserDir: addressUserEdit.value,
                UserRolId: rolUserEdit.value,
            }

            updateUser(userModel);
        }

    }

    // Enviar modelo al controller de crear
    function saveUser(modelo) {
        $.ajax({
            url: '/Users/Create',
            type: 'POST',
            data: { user: modelo },
            success: function (data) {
                if (data == "Ok") {
                    alert("Guardado con Exito");
                    location.reload();
                }
            },
            error: function () {
                alert("Error al actualizar Datos");
            }
        });
    }

    // Enviar modelo al controller de editar
    function updateUser(modelo) {
        $.ajax({
            url: '/Users/Edit',
            type: 'POST',
            data: { user: modelo },
            success: function (data) {
                if (data == "Ok") {
                    alert("Guardado con Exito");
                    location.reload();
                } else {
                    $('#modalUserEdit').modal('hide');
                    alert("Registro existente\nNo hay nada que actualizar");
                }
            },
            error: function () {
                alert("Error al actualizar Datos");
            }
        });
    }

    // Función para eliminar un registro con confirmación
    function delUser(id) {

        $('#modalDelUser').modal('show');
    }

    //Funcion para mostrar los mensajes de error
    function mostrarMensajeError(elemento, mensaje) {
        var mensajeError = elemento.nextElementSibling;
        if (!mensajeError || !mensajeError.classList.contains('mensaje-error')) {
            mensajeError = document.createElement('div');
            mensajeError.classList.add('mensaje-error');
            elemento.parentNode.insertBefore(mensajeError, elemento.nextSibling);
        }
        mensajeError.textContent = mensaje;
    }

    //Funcion para ocultar los mensajes de error
    function ocultarMensajeError(elemento) {
        var mensajeError = elemento.nextElementSibling;
        if (mensajeError && mensajeError.classList.contains('mensaje-error')) {
            mensajeError.parentNode.removeChild(mensajeError);
        }
    }
</script>
